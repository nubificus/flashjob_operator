name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY: harbor.nbfc.io
  REGISTRY_IMAGE: harbor.nbfc.io/cloud-iot/akri_operator

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: helm

      - name: Extract version from tag
        id: extract_version
        run: |
          if [[ $GITHUB_REF =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          else
            echo "VERSION=dev" >> $GITHUB_ENV
          fi

      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_SECRET }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY_IMAGE }}:v${{ env.VERSION }}
           #${{ env.REGISTRY_IMAGE }}:latest

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: '5.4.3'

      - name: Build install.yaml
        run: |
          mkdir -p dist
          kustomize build config/default > dist/install.yaml

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.15.0'

      - name: Update Helm chart versions
        run: |
          sed -i "s/^version:.*/version: ${{ env.VERSION }}/" dist/chart/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: ${{ env.VERSION }}/" dist/chart/Chart.yaml
          sed -i "/^[[:space:]]*image:/,/^[[:space:]]*[a-zA-Z]/ s/^[[:space:]]*tag:.*/    tag: \"${{ env.VERSION }}\"/" dist/chart/values.yaml

      - name: Package Helm chart
        run: |
          mkdir -p dist/helm-charts/charts
          helm package dist/chart --destination dist/helm-charts/charts --version ${{ env.VERSION }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref }}
          files: |
            dist/install.yaml
            dist/helm-charts/charts/operator-${{ env.VERSION }}.tgz

      - name: Setup Helm repository
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git config --global user.name "panosmaurikos"
          git config --global user.email "pmavrikos@nubificus.co.uk"
          # Προσπάθεια fetch του gh-pages, αλλά συνέχεια ακόμα κι αν αποτύχει
          git fetch origin gh-pages || true
          if git show-ref --quiet refs/remotes/origin/gh-pages; then
            git checkout gh-pages
          else
            git checkout --orphan gh-pages
          fi
          git rm -rf .
          mkdir -p helm-repo
          cp dist/helm-charts/charts/*.tgz helm-repo/
          helm repo index helm-repo --url https://panosmaurikos.github.io/flashjob_operator/
          mv helm-repo/* .
          echo > .nojekyll
          git add index.yaml *.tgz .nojekyll
          git commit -m "Update Helm repository for version ${{ env.VERSION }}"
          git push origin gh-pages --force
